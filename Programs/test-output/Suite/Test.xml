<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="sys" ignored="4" name="Test" tests="9" failures="0" timestamp="14 Jul 2019 08:54:37 GMT" time="5.744" errors="0">
  <testcase name="@BeforeClass startMEClass" time="0.0" classname="testCases.FormTest2">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at testCases.FormTest2.startMEClass(FormTest2.java:25)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
... Removed 11 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass startMEClass -->
  <testcase name="@BeforeMethod beforeTestMethod" time="0.0" classname="allUtils.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeTestMethod -->
  <testcase name="@AfterMethod afterTestMethod" time="0.0" classname="allUtils.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterTestMethod -->
  <testcase name="@BeforeMethod beforeTestMethod" time="0.0" classname="allUtils.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeTestMethod -->
  <testcase name="@AfterMethod afterTestMethod" time="0.0" classname="allUtils.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterTestMethod -->
  <testcase name="@AfterMethod afterTestMethod" time="0.0" classname="allUtils.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterTestMethod -->
  <testcase name="@BeforeMethod beforeTestMethod" time="0.0" classname="allUtils.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeTestMethod -->
  <testcase name="@BeforeMethod beforeTestMethod" time="0.0" classname="allUtils.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeTestMethod -->
  <testcase name="@AfterMethod afterTestMethod" time="0.0" classname="allUtils.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterTestMethod -->
  <testcase name="@BeforeMethod beforeTestMethod" time="0.0" classname="allUtils.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeTestMethod -->
  <testcase name="@AfterMethod afterTestMethod" time="0.0" classname="allUtils.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterTestMethod -->
  <testcase name="@BeforeMethod beforeTestMethod" time="0.0" classname="allUtils.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeTestMethod -->
  <testcase name="@AfterMethod afterTestMethod" time="0.0" classname="allUtils.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterTestMethod -->
  <testcase name="@BeforeMethod beforeTestMethod" time="0.0" classname="allUtils.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeTestMethod -->
  <testcase name="@AfterMethod afterTestMethod" time="0.0" classname="allUtils.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterTestMethod -->
  <testcase name="@BeforeMethod beforeTestMethod" time="0.0" classname="allUtils.BaseClass">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeTestMethod -->
  <testcase name="@AfterMethod afterTestMethod" time="0.0" classname="allUtils.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterTestMethod -->
  <testcase name="@AfterClass closeClass1" time="0.0" classname="testCases.FormTest2">
    <skipped/>
  </testcase> <!-- @AfterClass closeClass1 -->
  <testcase name="@AfterMethod afterTestMethod" time="0.0" classname="allUtils.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterMethod afterTestMethod -->
  <testcase name="@AfterClass closeClass1" time="0.0" classname="allUtils.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterClass closeClass1 -->
  <testcase name="@AfterTest closeBrowser" time="0.0" classname="allUtils.BaseClass">
    <skipped/>
  </testcase> <!-- @AfterTest closeBrowser -->
  <testcase name="formSingleEntry" time="0.0" classname="testCases.FormTest">
    <skipped/>
  </testcase> <!-- formSingleEntry -->
  <testcase name="formMultipleEntry" time="0.0" classname="testCases.FormTest2">
    <skipped/>
  </testcase> <!-- formMultipleEntry -->
  <testcase name="formMultipleEntry" time="0.0" classname="testCases.FormTest2">
    <skipped/>
  </testcase> <!-- formMultipleEntry -->
  <testcase name="formMultipleEntry" time="0.0" classname="testCases.FormTest2">
    <skipped/>
  </testcase> <!-- formMultipleEntry -->
  <testcase name="formSingleEntry" time="0.0" classname="testCases.FormTest">
    <skipped/>
  </testcase> <!-- formSingleEntry -->
  <testcase name="formMultipleEntry" time="0.0" classname="testCases.FormTest2">
    <skipped/>
  </testcase> <!-- formMultipleEntry -->
  <testcase name="formSingleEntry" time="0.0" classname="testCases.FormTest">
    <skipped/>
  </testcase> <!-- formSingleEntry -->
  <testcase name="formMultipleEntry" time="0.0" classname="testCases.FormTest2">
    <skipped/>
  </testcase> <!-- formMultipleEntry -->
  <testcase name="formSingleEntry" time="0.0" classname="testCases.FormTest">
    <skipped/>
  </testcase> <!-- formSingleEntry -->
  <testcase name="@AfterSuite afterSuite" time="0.0" classname="allUtils.BaseClass">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase name="@BeforeSuite startSuite" time="0.0" classname="allUtils.BaseClass">
    <ignored/>
  </testcase> <!-- @BeforeSuite startSuite -->
  <testcase name="@AfterTest closeBrowser" time="0.0" classname="allUtils.BaseClass">
    <ignored/>
  </testcase> <!-- @AfterTest closeBrowser -->
  <testcase name="@BeforeTest launchBrowser" time="0.0" classname="allUtils.BaseClass">
    <ignored/>
  </testcase> <!-- @BeforeTest launchBrowser -->
</testsuite> <!-- Test -->
