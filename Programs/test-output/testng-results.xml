<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="3" failed="1" ignored="0" total="9" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="23253" started-at="2019-07-14T02:15:20Z" finished-at="2019-07-14T02:15:43Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="5482" started-at="2019-07-14T02:15:20Z" finished-at="2019-07-14T02:15:25Z">
      <class name="testCases.FormTest">
        <test-method status="PASS" signature="launchBrowser()[pri:0, instance:testCases.FormTest@6acdbdf5]" name="launchBrowser" is-config="true" duration-ms="4500" started-at="2019-07-14T02:15:20Z" finished-at="2019-07-14T02:15:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method status="PASS" signature="beforeTestMethod()[pri:0, instance:testCases.FormTest@6acdbdf5]" name="beforeTestMethod" is-config="true" duration-ms="0" started-at="2019-07-14T02:15:25Z" finished-at="2019-07-14T02:15:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethod -->
        <test-method status="FAIL" signature="formSingleEntry(java.lang.String)[pri:0, instance:testCases.FormTest@6acdbdf5]" name="formSingleEntry" duration-ms="8" started-at="2019-07-14T02:15:25Z" data-provider="testData" finished-at="2019-07-14T02:15:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Srikanth]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at testCases.FormTest.formSingleEntry(FormTest.java:22)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- formSingleEntry -->
        <test-method status="FAIL" signature="afterTestMethod(org.testng.ITestResult)[pri:0, instance:testCases.FormTest@6acdbdf5]" name="afterTestMethod" is-config="true" duration-ms="4" started-at="2019-07-14T02:15:25Z" finished-at="2019-07-14T02:15:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=formSingleEntry status=FAILURE method=FormTest.formSingleEntry(java.lang.String)[pri:0, instance:testCases.FormTest@6acdbdf5] output={null}]]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at allUtils.BaseClass.afterTestMethod(BaseClass.java:80)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTestMethod -->
        <test-method status="SKIP" signature="beforeTestMethod()[pri:0, instance:testCases.FormTest@6acdbdf5]" name="beforeTestMethod" is-config="true" duration-ms="0" started-at="2019-07-14T02:15:25Z" finished-at="2019-07-14T02:15:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethod -->
        <test-method status="SKIP" signature="formSingleEntry(java.lang.String)[pri:0, instance:testCases.FormTest@6acdbdf5]" name="formSingleEntry" duration-ms="0" started-at="2019-07-14T02:15:25Z" data-provider="testData" finished-at="2019-07-14T02:15:25Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at allUtils.BaseClass.afterTestMethod(BaseClass.java:80)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- formSingleEntry -->
        <test-method status="SKIP" signature="afterTestMethod(org.testng.ITestResult)[pri:0, instance:testCases.FormTest@6acdbdf5]" name="afterTestMethod" is-config="true" duration-ms="0" started-at="2019-07-14T02:15:25Z" finished-at="2019-07-14T02:15:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTestMethod -->
        <test-method status="SKIP" signature="beforeTestMethod()[pri:0, instance:testCases.FormTest@6acdbdf5]" name="beforeTestMethod" is-config="true" duration-ms="0" started-at="2019-07-14T02:15:25Z" finished-at="2019-07-14T02:15:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethod -->
        <test-method status="SKIP" signature="formSingleEntry(java.lang.String)[pri:0, instance:testCases.FormTest@6acdbdf5]" name="formSingleEntry" duration-ms="0" started-at="2019-07-14T02:15:25Z" data-provider="testData" finished-at="2019-07-14T02:15:25Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at allUtils.BaseClass.afterTestMethod(BaseClass.java:80)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- formSingleEntry -->
        <test-method status="SKIP" signature="afterTestMethod(org.testng.ITestResult)[pri:0, instance:testCases.FormTest@6acdbdf5]" name="afterTestMethod" is-config="true" duration-ms="0" started-at="2019-07-14T02:15:25Z" finished-at="2019-07-14T02:15:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTestMethod -->
        <test-method status="SKIP" signature="formSingleEntry(java.lang.String)[pri:0, instance:testCases.FormTest@6acdbdf5]" name="formSingleEntry" duration-ms="0" started-at="2019-07-14T02:15:25Z" data-provider="testData" finished-at="2019-07-14T02:15:25Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at allUtils.BaseClass.afterTestMethod(BaseClass.java:80)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- formSingleEntry -->
        <test-method status="SKIP" signature="beforeTestMethod()[pri:0, instance:testCases.FormTest@6acdbdf5]" name="beforeTestMethod" is-config="true" duration-ms="0" started-at="2019-07-14T02:15:25Z" finished-at="2019-07-14T02:15:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethod -->
        <test-method status="SKIP" signature="afterTestMethod(org.testng.ITestResult)[pri:0, instance:testCases.FormTest@6acdbdf5]" name="afterTestMethod" is-config="true" duration-ms="0" started-at="2019-07-14T02:15:25Z" finished-at="2019-07-14T02:15:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTestMethod -->
        <test-method status="SKIP" signature="closeBrowser()[pri:0, instance:testCases.FormTest@6acdbdf5]" name="closeBrowser" is-config="true" duration-ms="0" started-at="2019-07-14T02:15:25Z" finished-at="2019-07-14T02:15:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testCases.FormTest -->
    </test> <!-- Test -->
    <test name="Test2" duration-ms="17709" started-at="2019-07-14T02:15:25Z" finished-at="2019-07-14T02:15:43Z">
      <class name="testCases.FormTest2">
        <test-method status="PASS" signature="startSuite()[pri:0, instance:testCases.FormTest2@2f943d71]" name="startSuite" is-config="true" duration-ms="186" started-at="2019-07-14T02:15:20Z" finished-at="2019-07-14T02:15:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startSuite -->
        <test-method status="PASS" signature="launchBrowser()[pri:0, instance:testCases.FormTest2@2f943d71]" name="launchBrowser" is-config="true" duration-ms="3515" started-at="2019-07-14T02:15:25Z" finished-at="2019-07-14T02:15:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method status="PASS" signature="beforeTestMethod()[pri:0, instance:testCases.FormTest2@2f943d71]" name="beforeTestMethod" is-config="true" duration-ms="0" started-at="2019-07-14T02:15:29Z" finished-at="2019-07-14T02:15:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethod -->
        <test-method status="PASS" signature="formMultipleEntry(java.lang.String, java.lang.String)[pri:0, instance:testCases.FormTest2@2f943d71]" name="formMultipleEntry" duration-ms="5871" started-at="2019-07-14T02:15:29Z" data-provider="testData" finished-at="2019-07-14T02:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- formMultipleEntry -->
        <test-method status="PASS" signature="afterTestMethod(org.testng.ITestResult)[pri:0, instance:testCases.FormTest2@2f943d71]" name="afterTestMethod" is-config="true" duration-ms="4" started-at="2019-07-14T02:15:35Z" finished-at="2019-07-14T02:15:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=formMultipleEntry status=SUCCESS method=FormTest2.formMultipleEntry(java.lang.String, java.lang.String)[pri:0, instance:testCases.FormTest2@2f943d71] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTestMethod -->
        <test-method status="PASS" signature="formMultipleEntry(java.lang.String, java.lang.String)[pri:0, instance:testCases.FormTest2@2f943d71]" name="formMultipleEntry" duration-ms="2033" started-at="2019-07-14T02:15:35Z" data-provider="testData" finished-at="2019-07-14T02:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- formMultipleEntry -->
        <test-method status="PASS" signature="beforeTestMethod()[pri:0, instance:testCases.FormTest2@2f943d71]" name="beforeTestMethod" is-config="true" duration-ms="0" started-at="2019-07-14T02:15:35Z" finished-at="2019-07-14T02:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethod -->
        <test-method status="PASS" signature="formMultipleEntry(java.lang.String, java.lang.String)[pri:0, instance:testCases.FormTest2@2f943d71]" name="formMultipleEntry" duration-ms="2194" started-at="2019-07-14T02:15:37Z" data-provider="testData" finished-at="2019-07-14T02:15:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[7.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[9.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- formMultipleEntry -->
        <test-method status="PASS" signature="beforeTestMethod()[pri:0, instance:testCases.FormTest2@2f943d71]" name="beforeTestMethod" is-config="true" duration-ms="0" started-at="2019-07-14T02:15:37Z" finished-at="2019-07-14T02:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethod -->
        <test-method status="PASS" signature="afterTestMethod(org.testng.ITestResult)[pri:0, instance:testCases.FormTest2@2f943d71]" name="afterTestMethod" is-config="true" duration-ms="0" started-at="2019-07-14T02:15:37Z" finished-at="2019-07-14T02:15:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=formMultipleEntry status=SUCCESS method=FormTest2.formMultipleEntry(java.lang.String, java.lang.String)[pri:0, instance:testCases.FormTest2@2f943d71] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTestMethod -->
        <test-method status="PASS" signature="afterTestMethod(org.testng.ITestResult)[pri:0, instance:testCases.FormTest2@2f943d71]" name="afterTestMethod" is-config="true" duration-ms="0" started-at="2019-07-14T02:15:39Z" finished-at="2019-07-14T02:15:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=formMultipleEntry status=SUCCESS method=FormTest2.formMultipleEntry(java.lang.String, java.lang.String)[pri:0, instance:testCases.FormTest2@2f943d71] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTestMethod -->
        <test-method status="PASS" signature="beforeTestMethod()[pri:0, instance:testCases.FormTest2@2f943d71]" name="beforeTestMethod" is-config="true" duration-ms="0" started-at="2019-07-14T02:15:39Z" finished-at="2019-07-14T02:15:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethod -->
        <test-method status="PASS" signature="formMultipleEntry(java.lang.String, java.lang.String)[pri:0, instance:testCases.FormTest2@2f943d71]" name="formMultipleEntry" duration-ms="1934" started-at="2019-07-14T02:15:39Z" data-provider="testData" finished-at="2019-07-14T02:15:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[8.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- formMultipleEntry -->
        <test-method status="PASS" signature="afterTestMethod(org.testng.ITestResult)[pri:0, instance:testCases.FormTest2@2f943d71]" name="afterTestMethod" is-config="true" duration-ms="0" started-at="2019-07-14T02:15:41Z" finished-at="2019-07-14T02:15:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=formMultipleEntry status=SUCCESS method=FormTest2.formMultipleEntry(java.lang.String, java.lang.String)[pri:0, instance:testCases.FormTest2@2f943d71] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTestMethod -->
        <test-method status="PASS" signature="formMultipleEntry(java.lang.String, java.lang.String)[pri:0, instance:testCases.FormTest2@2f943d71]" name="formMultipleEntry" duration-ms="1982" started-at="2019-07-14T02:15:41Z" data-provider="testData" finished-at="2019-07-14T02:15:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- formMultipleEntry -->
        <test-method status="PASS" signature="beforeTestMethod()[pri:0, instance:testCases.FormTest2@2f943d71]" name="beforeTestMethod" is-config="true" duration-ms="0" started-at="2019-07-14T02:15:41Z" finished-at="2019-07-14T02:15:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethod -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:testCases.FormTest2@2f943d71]" name="closeBrowser" is-config="true" duration-ms="92" started-at="2019-07-14T02:15:43Z" finished-at="2019-07-14T02:15:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method status="PASS" signature="afterTestMethod(org.testng.ITestResult)[pri:0, instance:testCases.FormTest2@2f943d71]" name="afterTestMethod" is-config="true" duration-ms="0" started-at="2019-07-14T02:15:43Z" finished-at="2019-07-14T02:15:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=formMultipleEntry status=SUCCESS method=FormTest2.formMultipleEntry(java.lang.String, java.lang.String)[pri:0, instance:testCases.FormTest2@2f943d71] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTestMethod -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:testCases.FormTest2@2f943d71]" name="afterSuite" is-config="true" duration-ms="448" started-at="2019-07-14T02:15:43Z" finished-at="2019-07-14T02:15:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- testCases.FormTest2 -->
    </test> <!-- Test2 -->
  </suite> <!-- Suite -->
</testng-results>
